{"ast":null,"code":"var _jsxFileName = \"/home/geffting/workspace/react-desafio-foton/Desafio-frontend-react/foton-react/src/components/InputSearch.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputSearch = ({\n  onUpdate\n}) => {\n  _s();\n\n  let history = useHistory();\n  let location = useLocation();\n  const [input, setInput] = useState('');\n\n  const updateInput = () => {\n    onUpdate(input);\n  };\n\n  const debounceUpdate = _.debounce(updateInput, 1000);\n\n  const onInput = value => {\n    setInput(value);\n\n    if (!value && history.location.pathname !== '/') {\n      history.push('/');\n    }\n\n    if (value && history.location.pathname !== '/search') {\n      history.push('/search');\n    }\n\n    debounceUpdate();\n  };\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      setInput('');\n    }\n\n    return () => {};\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchInput\",\n      value: input,\n      onChange: e => onInput(e.target.value),\n      placeholder: \"Search book\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputSearch, \"yaKrxpEluuiyuQISrRLHjjZeOIg=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = InputSearch;\nInputSearch.propTypes = {\n  onUpdate: PropTypes.func\n};\nexport default InputSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"sources":["/home/geffting/workspace/react-desafio-foton/Desafio-frontend-react/foton-react/src/components/InputSearch.js"],"names":["PropTypes","useState","useEffect","useHistory","useLocation","_","InputSearch","onUpdate","history","location","input","setInput","updateInput","debounceUpdate","debounce","onInput","value","pathname","push","e","target","propTypes","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,MAAIC,OAAO,GAAGL,UAAU,EAAxB;AACA,MAAIM,QAAQ,GAAGL,WAAW,EAA1B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMG,cAAc,GAAGR,CAAC,CAACS,QAAF,CAAWF,WAAX,EAAwB,IAAxB,CAAvB;;AACA,QAAMG,OAAO,GAAIC,KAAD,IAAW;AACzBL,IAAAA,QAAQ,CAACK,KAAD,CAAR;;AACA,QAAI,CAACA,KAAD,IAAUR,OAAO,CAACC,QAAR,CAAiBQ,QAAjB,KAA8B,GAA5C,EAAiD;AAC/CT,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD;;AACD,QAAIF,KAAK,IAAIR,OAAO,CAACC,QAAR,CAAiBQ,QAAjB,KAA8B,SAA3C,EAAsD;AACpDT,MAAAA,OAAO,CAACU,IAAR,CAAa,SAAb;AACD;;AACDL,IAAAA,cAAc;AACf,GATD;;AAWAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAQ,CAACQ,QAAT,KAAsB,GAA1B,EAA+B;AAC7BN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;;AACD,WAAO,MAAM,CAAE,CAAf;AACD,GALQ,EAKN,CAACF,QAAD,CALM,CAAT;AAOA,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,KAAK,EAAGC,KAAvC;AAA+C,MAAA,QAAQ,EAAIS,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAxE;AAA0F,MAAA,WAAW,EAAC,aAAtG;AAAoH,MAAA,IAAI,EAAC;AAAzH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMV,W;UACUH,U,EACCC,W;;;KAFXE,W;AAkCNA,WAAW,CAACe,SAAZ,GAAwB;AACtBd,EAAAA,QAAQ,EAAEP,SAAS,CAACsB;AADE,CAAxB;AAIA,eAAehB,WAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport _ from 'lodash'\n\nconst InputSearch = ({ onUpdate }) => {\n  let history = useHistory()\n  let location = useLocation()\n  const [input, setInput] = useState('')\n\n  const updateInput = () => {\n    onUpdate(input)\n  }\n  const debounceUpdate = _.debounce(updateInput, 1000)\n  const onInput = (value) => {\n    setInput(value)\n    if (!value && history.location.pathname !== '/') {\n      history.push('/')\n    }\n    if (value && history.location.pathname !== '/search') {\n      history.push('/search')\n    }\n    debounceUpdate()\n  }\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      setInput('')\n    }\n    return () => {}\n  }, [location])\n\n  return (\n    <div>\n      <input className=\"searchInput\" value={ input } onChange={ (e) => onInput(e.target.value)} placeholder=\"Search book\" type=\"text\" />\n    </div>\n  )\n}\n\nInputSearch.propTypes = {\n  onUpdate: PropTypes.func\n}\n\nexport default InputSearch\n"]},"metadata":{},"sourceType":"module"}