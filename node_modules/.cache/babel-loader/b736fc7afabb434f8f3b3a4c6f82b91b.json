{"ast":null,"code":"var _jsxFileName = \"/home/geffting/workspace/react-desafio-foton/Desafio-frontend-react/foton-react/src/components/InputSearch.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputSearch = ({\n  onUpdate\n}) => {\n  _s();\n\n  const [input] = useState(''); // setInput ?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchInput\",\n      value: input,\n      onChange: () => onUpdate(input),\n      placeholder: \"Search book\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputSearch, \"PwkflqfaN5YDY1/btYMzTR0J6zM=\");\n\n_c = InputSearch;\nInputSearch.propTypes = {\n  onUpdate: PropTypes.func\n};\nexport default InputSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"sources":["/home/geffting/workspace/react-desafio-foton/Desafio-frontend-react/foton-react/src/components/InputSearch.js"],"names":["PropTypes","useState","InputSearch","onUpdate","input","propTypes","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACC,KAAD,IAAUH,QAAQ,CAAC,EAAD,CAAxB,CADoC,CACP;;AAE7B,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,KAAK,EAAGG,KAAvC;AAA+C,MAAA,QAAQ,EAAG,MAAMD,QAAQ,CAACC,KAAD,CAAxE;AAAkF,MAAA,WAAW,EAAC,aAA9F;AAA4G,MAAA,IAAI,EAAC;AAAjH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;;GAAMF,W;;KAAAA,W;AAUNA,WAAW,CAACG,SAAZ,GAAwB;AACtBF,EAAAA,QAAQ,EAAEH,SAAS,CAACM;AADE,CAAxB;AAIA,eAAeJ,WAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport { useState } from 'react'\n\nconst InputSearch = ({ onUpdate }) => {\n  const [input] = useState('') // setInput ?\n\n  return (\n    <div>\n      <input className=\"searchInput\" value={ input } onChange={ () => onUpdate(input) } placeholder=\"Search book\" type=\"text\" />\n    </div>\n  )\n}\n\nInputSearch.propTypes = {\n  onUpdate: PropTypes.func\n}\n\nexport default InputSearch\n"]},"metadata":{},"sourceType":"module"}