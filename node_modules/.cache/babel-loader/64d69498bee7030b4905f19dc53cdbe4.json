{"ast":null,"code":"var _jsxFileName = \"/home/geffting/workspace/react-desafio-foton/Desafio-frontend-react/foton-react/src/components/InputSearch.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputSearch = ({\n  onUpdate\n}) => {\n  _s();\n\n  let history = useHistory();\n  let location = useLocation();\n  const [input, setInput] = useState('');\n\n  const onInput = value => {\n    if (!value && history.location.pathname !== '/') {\n      history.push('/');\n    }\n\n    if (value && history.location.pathname !== '/search') {\n      history.push('/search');\n    }\n\n    setInput(value);\n    onUpdate(value);\n  };\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      setInput('');\n    }\n\n    return () => {};\n  }, [location]);\n  useEffect(() => {\n    onInput(input);\n    return () => {};\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchInput\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Search book\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputSearch, \"tNOWOB/WS34ae/HrlBW/XHmruUM=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = InputSearch;\nInputSearch.propTypes = {\n  onUpdate: PropTypes.func\n};\nexport default InputSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"sources":["/home/geffting/workspace/react-desafio-foton/Desafio-frontend-react/foton-react/src/components/InputSearch.js"],"names":["PropTypes","useState","useEffect","useHistory","useLocation","InputSearch","onUpdate","history","location","input","setInput","onInput","value","pathname","push","e","target","propTypes","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AACA,MAAIK,QAAQ,GAAGJ,WAAW,EAA1B;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMU,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAI,CAACA,KAAD,IAAUL,OAAO,CAACC,QAAR,CAAiBK,QAAjB,KAA8B,GAA5C,EAAiD;AAC/CN,MAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD;;AACD,QAAIF,KAAK,IAAIL,OAAO,CAACC,QAAR,CAAiBK,QAAjB,KAA8B,SAA3C,EAAsD;AACpDN,MAAAA,OAAO,CAACO,IAAR,CAAa,SAAb;AACD;;AACDJ,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACAN,IAAAA,QAAQ,CAACM,KAAD,CAAR;AACD,GATD;;AAWAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAQ,CAACK,QAAT,KAAsB,GAA1B,EAA+B;AAC7BH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;;AACD,WAAO,MAAM,CAAE,CAAf;AACD,GALQ,EAKN,CAACF,QAAD,CALM,CAAT;AAOAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACF,KAAD,CAAP;AACA,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,KAAK,EAAGA,KAAvC;AAA+C,MAAA,QAAQ,EAAIM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAzE;AAA2F,MAAA,WAAW,EAAC,aAAvG;AAAqH,MAAA,IAAI,EAAC;AAA1H;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCD;;GAAMP,W;UACUF,U,EACCC,W;;;KAFXC,W;AAmCNA,WAAW,CAACY,SAAZ,GAAwB;AACtBX,EAAAA,QAAQ,EAAEN,SAAS,CAACkB;AADE,CAAxB;AAIA,eAAeb,WAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst InputSearch = ({ onUpdate }) => {\n  let history = useHistory()\n  let location = useLocation()\n\n  const [input, setInput] = useState('')\n  const onInput = (value) => {\n    if (!value && history.location.pathname !== '/') {\n      history.push('/')\n    }\n    if (value && history.location.pathname !== '/search') {\n      history.push('/search')\n    }\n    setInput(value)\n    onUpdate(value)\n  }\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      setInput('')\n    }\n    return () => {}\n  }, [location])\n\n  useEffect(() => {\n    onInput(input)\n    return () => {}\n  }, [input])\n\n  return (\n    <div>\n      <input className=\"searchInput\" value={ input } onChange={ (e) => setInput(e.target.value)} placeholder=\"Search book\" type=\"text\" />\n    </div>\n  )\n}\n\nInputSearch.propTypes = {\n  onUpdate: PropTypes.func\n}\n\nexport default InputSearch\n"]},"metadata":{},"sourceType":"module"}